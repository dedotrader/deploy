
services:
  client:
    container_name: client
    restart: always
    image: spv99build/dedotrader-client:latest
    depends_on:
      - backend
    labels:
      - sh.acme.autoload.domain=${DEDOTRADER_DOMAIN}
    environment:
      - VIRTUAL_HOST=${DEDOTRADER_DOMAIN}
      - ENABLE_ACME=true
      - NX_SERVER_API_URL=http://${DEDOTRADER_DOMAIN}:3000
      - DEBUG=${DEBUG}
    ports:
      - 80:80
    networks:
      - proxy


  backend:
    container_name: backend
    restart: always
    image: spv99build/dedotrader:latest
    environment:
      - VIRTUAL_HOST=api.${DEDOTRADER_DOMAIN}
      - VIRTUAL_PORT=3000
      - ENABLE_ACME=true
      - LOG_VERBOSE_LEVEL=debug
      - PORT=3000
      - MONGODB_URL=mongodb://mongo:27017/dedotrader
      - REDIS_URL=redis://redis:6379
      - CLIENT_APP_URL=http://${DEDOTRADER_DOMAIN}
      - JWT_SECRET=${JWT_SECRET}
      - KEY_SECRET=${KEY_SECRET}
      - SUPERADMIN_USERNAME=${SUPERADMIN_USER}
      - DEBUG=${DEBUG}
      - ADMIN_EMAIL=app+dedotrader@spv99.com
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=eu-central-1
      - MAIL_FROM=app+dedotrader@spv99.com
      - MAIL_BCC=app+dedotrader@spv99.com
    depends_on:
      - mongo
      - redis
    networks:
      - dedotrader
      - proxy
    ports:
      - 3000:3000

  redis:
    container_name: redis
    restart: always
    image: redis:7
    networks:
      - dedotrader
    expose:
      - 6379

  mongo:
    container_name: mongo
    restart: always
    image: mongo:6.0.5
    volumes:
      - type: volume
        source: mongo-data
        target: /data/db
    networks:
      - dedotrader
    expose:
      - 27017

networks:
  dedotrader:
  proxy:
    name: proxy

volumes:
  mongo-data:
